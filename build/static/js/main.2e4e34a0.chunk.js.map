{"version":3,"sources":["actions/types.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","components/layouts/Navbar.js","components/layouts/spinner.gif","components/layouts/Spinner.js","components/layouts/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layouts/Alert.js","components/routing/PrivateRoute.js","actions/profile.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/prodfile-forms/CreateProfile.js","components/prodfile-forms/EditProfile.js","components/prodfile-forms/AddExperience.js","components/prodfile-forms/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_PROFILE","GET_PROFILES","GET_REPOS","PROFILE_ERROR","CLEAR_PROFILE","UPDATE_PROFILE","GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authlinks","to","className","onClick","guestLinks","src","spinner","alt","style","width","margin","display","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","login","required","minLength","alerts","alert","length","map","Component","component","rest","render","props","getCurrentProfile","statusText","status","createProfile","history","edit","push","DashboardActions","deleteExperience","delete","experience","experiences","exp","company","title","format","moment","utc","from","_id","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","Spinner","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","join","social","addExperience","put","current","description","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","addEducation","fieldofstudy","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","ProfileTop","href","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","document","getElementById"],"mappings":"qNAAaA,EAAY,YACZC,EAAe,eACfC,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAc,cACdC,EAAa,aACbC,EAAgB,gBAChBC,EAAa,aACbC,EAAS,SACTC,EAAc,cACdC,EAAe,eACfC,EAAY,YACZC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAiB,iBAGjBC,EAAY,YACZC,EAAW,WACXC,EAAa,aACbC,EAAe,eACfC,EAAc,cACdC,EAAW,WACXC,EAAc,cACdC,EAAiB,iB,QCrBjBC,EAAW,SAACC,EAAKC,GAAN,IAAiBC,EAAjB,uDAA2B,KAA3B,OAAoC,SAACC,GAC3D,IAAMC,EAAKC,cACXF,EAAS,CACPG,KAAM9B,EACN+B,QAAS,CAAEP,MAAKC,YAAWG,QAE7BI,YAAW,kBAAML,EAAS,CAAEG,KAAM7B,EAAc8B,QAASH,MAAOF,KCCnDO,EARM,SAACC,GAChBA,EACFC,IAAMC,SAASC,QAAQC,OAAO,gBAAkBJ,SAEzCC,IAAMC,SAASC,QAAQC,OAAO,iBCU5BC,EAAW,yDAAM,WAAOZ,GAAP,eAAAa,EAAA,6DACxBC,aAAaP,OACfD,EAAaQ,aAAaP,OAFA,kBAMRC,IAAMO,IAAI,aANF,OAMpBC,EANoB,OAO1BhB,EAAS,CACPG,KAAM1B,EACN2B,QAASY,EAAIC,OATW,gDAY1BjB,EAAS,CAAEG,KAAMzB,IAZS,yDAAN,uD,OC4DTwC,eAJS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,QAG0B,CAAEC,ODkBpB,kBAAM,SAACrB,GAC3BA,EAAS,CAAEG,KAAMtB,IACjBmB,EAAS,CAAEG,KAAMjB,OCpBJgC,EAtEA,SAAC,GAAoD,IAAD,IAAjDE,KAAQE,EAAyC,EAAzCA,gBAAiBC,EAAwB,EAAxBA,QAAWF,EAAa,EAAbA,OAC9CG,EACJ,+BACE,6BACE,eAAC,IAAD,CAAMC,GAAG,YAAT,UACE,mBAAGC,UAAU,gBADf,yBAKF,6BACE,eAAC,IAAD,CAAMD,GAAG,SAAT,UACE,mBAAGC,UAAU,gBADf,aAKF,6BACE,eAAC,IAAD,CAAMD,GAAG,aAAT,UACE,mBAAGC,UAAU,gBACb,sBAAMA,UAAU,UAAhB,4BAGJ,6BACE,eAAC,IAAD,CAAMD,GAAG,GAAGE,QAASN,EAArB,UACE,mBAAGK,UAAU,wBACb,sBAAMA,UAAU,UAAhB,4BAMFE,EACJ,+BACE,6BACE,eAAC,IAAD,CAAMH,GAAG,YAAT,UACE,mBAAGC,UAAU,gBADf,yBAKF,6BACE,cAAC,IAAD,CAAMD,GAAG,YAAT,wBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,wBAKN,OACE,sBAAKC,UAAU,iBAAf,UACE,6BACE,eAAC,IAAD,CAAMD,GAAG,IAAT,UACE,mBAAGC,UAAU,iBADf,eAIAH,GACA,cAAC,WAAD,UAAWD,EAAkBE,EAAYI,UC7DlC,MAA0B,oCCG1B,oBACb,cAAC,WAAD,UACE,qBACEC,IAAKC,EACLC,IAAI,GACJC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,cCqCzCjB,eAJS,SAACC,GAAD,MAAY,CAClCG,gBAAiBH,EAAMC,KAAKE,mBAGfJ,EAvCC,SAAC,GACf,OADuC,EAAtBI,gBAER,cAAC,IAAD,CAAUG,GAAG,eAIpB,yBAASC,UAAU,UAAnB,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,UAAd,yCACA,mBAAGA,UAAU,OAAb,0GAIA,sBAAKA,UAAU,UAAf,UACE,cAAC,IAAD,CAAMD,GAAG,YAAYC,UAAU,kBAA/B,qBAGA,cAAC,IAAD,CAAMD,GAAG,SAASC,UAAU,gBAA5B,mBAGA,qBAAKzB,GAAG,SAAR,SACE,gF,uBC8ECiB,eAJS,SAACC,GAAD,MAAY,CAClCG,gBAAiBH,EAAMC,KAAKE,mBAGU,CAAE1B,WAAUwC,SLxE5B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,8CAA+B,WAAOvC,GAAP,qBAAAa,EAAA,6DAC/C2B,EAAS,CACb9B,QAAS,CACP,eAAgB,qBAId+B,EAAOC,KAAKC,UAAU,CAAEN,OAAMC,QAAOC,aAPU,kBAUjC/B,IAAMoC,KAAK,aAAcH,EAAMD,GAVE,OAU7CxB,EAV6C,OAWnDhB,EAAS,CACPG,KAAM5B,EACN6B,QAASY,EAAIC,OAboC,iDAgB7C4B,EAAS,KAAIC,SAAS7B,KAAK4B,SAG/BA,EAAOE,SAAQ,SAACC,GAAD,OAAWhD,EAASJ,EAASoD,EAAMnD,IAAK,cAEzDG,EAAS,CACPG,KAAM3B,IAtB2C,yDAA/B,wDKwET0C,EAlGE,SAAC,GAA6C,IAA3CtB,EAA0C,EAA1CA,SAAUwC,EAAgC,EAAhCA,SAAUd,EAAsB,EAAtBA,gBAAsB,EAC5B2B,mBAAS,CACvCZ,KAAM,GACNC,MAAO,GACPC,SAAU,GACVW,UAAW,KAL+C,mBACrDC,EADqD,KAC3CC,EAD2C,KAQpDf,EAAqCc,EAArCd,KAAMC,EAA+Ba,EAA/Bb,MAAOC,EAAwBY,EAAxBZ,SAAUW,EAAcC,EAAdD,UACzBG,EAAW,SAACC,GAAD,OACfF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAEjDC,EAAQ,uCAAG,WAAOH,GAAP,SAAAzC,EAAA,sDACfyC,EAAEI,iBACEnB,IAAaW,EACftD,EAAS,yBAA0B,UAEnCwC,EAAS,CAAEC,OAAMC,QAAOC,aALX,2CAAH,sDAUd,OAAIjB,EACK,cAAC,IAAD,CAAUG,GAAG,eAIpB,cAAC,WAAD,UACE,sBAAKxB,GAAG,WAAR,UACE,oBAAIyB,UAAU,qBAAd,qBACA,oBAAGA,UAAU,OAAb,UACE,mBAAGA,UAAU,gBADf,0BAGA,uBAAMA,UAAU,OAAO+B,SAAU,SAACH,GAAD,OAAOG,EAASH,IAAjD,UACE,qBAAK5B,UAAU,aAAf,SACE,uBACEvB,KAAK,OACLwD,YAAY,OACZH,MAAOnB,EACPgB,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BjB,KAAK,WAIT,sBAAKX,UAAU,aAAf,UACE,uBACEvB,KAAK,QACLwD,YAAY,gBACZtB,KAAK,QACLmB,MAAOlB,EACPe,SAAU,SAACC,GAAD,OAAOD,EAASC,MAG5B,uBAAO5B,UAAU,YAAjB,6FAKF,qBAAKA,UAAU,aAAf,SACE,uBACEvB,KAAK,WACLwD,YAAY,WACZtB,KAAK,WAELmB,MAAOjB,EACPc,SAAU,SAACC,GAAD,OAAOD,EAASC,QAG9B,qBAAK5B,UAAU,aAAf,SACE,uBACEvB,KAAK,WACLwD,YAAY,mBACZtB,KAAK,YAELmB,MAAON,EACPG,SAAU,SAACC,GAAD,OAAOD,EAASC,QAG9B,uBAAOnD,KAAK,SAASuB,UAAU,kBAAkB8B,MAAM,gBAEzD,oBAAG9B,UAAU,OAAb,sCAC2B,cAAC,IAAD,CAAMD,GAAG,SAAT,gCCjBpBP,eAJS,SAACC,GAAD,MAAY,CAClCG,gBAAiBH,EAAMC,KAAKE,mBAGU,CAAEsC,MNTrB,SAACtB,EAAOC,GAAR,8CAAqB,WAAOvC,GAAP,qBAAAa,EAAA,6DAClC2B,EAAS,CACb9B,QAAS,CACP,eAAgB,qBAId+B,EAAOC,KAAKC,UAAU,CAAEL,QAAOC,aAPG,kBAUpB/B,IAAMoC,KAAK,YAAaH,EAAMD,GAVV,OAUhCxB,EAVgC,OAWtChB,EAAS,CACPG,KAAMxB,EACNyB,QAASY,EAAIC,OAGfjB,EAASY,KAhB6B,mDAkBhCiC,EAAS,KAAIC,SAAS7B,KAAK4B,SAG/BA,EAAOE,SAAQ,SAACC,GAAD,OAAWhD,EAASJ,EAASoD,EAAMnD,IAAK,cAEzDG,EAAS,CACPG,KAAMvB,IAxB8B,0DAArB,wDMSNsC,EAlED,SAAC,GAAgC,IAA9B0C,EAA6B,EAA7BA,MAAOtC,EAAsB,EAAtBA,gBAAsB,EACZ2B,mBAAS,CACvCX,MAAO,GACPC,SAAU,KAHgC,mBACrCY,EADqC,KAC3BC,EAD2B,KAMpCd,EAAoBa,EAApBb,MAAOC,EAAaY,EAAbZ,SACTc,EAAW,SAACC,GAAD,OACfF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAEjDC,EAAQ,uCAAG,WAAOH,GAAP,SAAAzC,EAAA,sDACfyC,EAAEI,iBACFE,EAAMtB,EAAOC,GAFE,2CAAH,sDAMd,OAAIjB,EACK,cAAC,IAAD,CAAUG,GAAG,eAIpB,eAAC,WAAD,WACE,oBAAIC,UAAU,qBAAd,mBACA,oBAAGA,UAAU,OAAb,UACE,mBAAGA,UAAU,gBADf,8BAGA,uBAAMA,UAAU,OAAO+B,SAAU,SAACH,GAAD,OAAOG,EAASH,IAAjD,UACE,qBAAK5B,UAAU,aAAf,SACE,uBACEvB,KAAK,QACLwD,YAAY,gBACZtB,KAAK,QACLmB,MAAOlB,EACPe,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BO,UAAQ,MAGZ,qBAAKnC,UAAU,aAAf,SACE,uBACEvB,KAAK,WACLwD,YAAY,WACZtB,KAAK,WACLyB,UAAU,IACVN,MAAOjB,EACPc,SAAU,SAACC,GAAD,OAAOD,EAASC,QAI9B,uBAAOnD,KAAK,SAASuB,UAAU,kBAAkB8B,MAAM,aAEzD,oBAAG9B,UAAU,OAAb,oCACyB,cAAC,IAAD,CAAMD,GAAG,YAAT,8BCpChBP,eAJS,SAACC,GAAD,MAAY,CAClC4C,OAAQ5C,EAAM6C,SAGD9C,EAjBD,SAAC,GAAD,IAAG6C,EAAH,EAAGA,OAAH,OACD,OAAXA,GACAA,EAAOE,OAAS,GAChBF,EAAOG,KAAI,SAACF,GAAD,OACT,qBAAoBtC,UAAS,sBAAiBsC,EAAMlE,WAApD,SACGkE,EAAMnE,KADCmE,EAAM/D,U,QCoBLiB,eAJS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,QAGCF,EAvBM,SAAC,GAAD,IACRiD,EADQ,EACnBC,UADmB,IAEnBhD,KAAQE,EAFW,EAEXA,gBAAiBC,EAFN,EAEMA,QACtB8C,EAHgB,2CAKnB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACC,GAAD,OACLjD,GAAoBC,EAGnB,cAAC4C,EAAD,eAAeI,IAFf,cAAC,IAAD,CAAU9C,GAAG,kBCoDR+C,GAAoB,yDAAM,WAAOxE,GAAP,eAAAa,EAAA,+EAEjBL,IAAMO,IAAI,mBAFO,OAE7BC,EAF6B,OAInChB,EAAS,CACPG,KAAMrB,EACNsB,QAASY,EAAIC,OANoB,gDASnCjB,EAAS,CACPG,KAAMlB,EACNmB,QAAS,CAAEP,IAAK,KAAIiD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAX7B,yDAAN,uDAkBpBC,GAAgB,SAACxB,EAAUyB,GAAX,IAAoBC,EAApB,sGAAqC,WAChE7E,GADgE,mBAAAa,EAAA,sEAIxD2B,EAAS,CACb9B,QAAS,CACP,eAAgB,qBAN0C,SAS5CF,IAAMoC,KAAK,eAAgBO,EAAUX,GATO,OASxDxB,EATwD,OAU9DhB,EAAS,CACPG,KAAMrB,EACNsB,QAASY,EAAIC,OAGfjB,EAASJ,EAASiF,EAAO,kBAAoB,kBAAmB,YAE3DA,GACHD,EAAQE,KAAK,cAlB+C,mDAqBxDjC,EAAS,KAAIC,SAAS7B,KAAK4B,SAG/BA,EAAOE,SAAQ,SAACC,GAAD,OAAWhD,EAASJ,EAASoD,EAAMnD,IAAK,cAEzDG,EAAS,CACPG,KAAMlB,EACNmB,QAAS,CAAEP,IAAK,KAAIiD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UA5BF,0DAArC,uDCjFhBK,GAAmB,WAC9B,OACE,sBAAKrD,UAAU,eAAf,UACE,eAAC,IAAD,CAAMD,GAAG,gBAAgBC,UAAU,gBAAnC,UACE,mBAAGA,UAAU,oCADf,mBAGA,eAAC,IAAD,CAAMD,GAAG,kBAAkBC,UAAU,gBAArC,UACE,mBAAGA,UAAU,kCADf,qBAGA,eAAC,IAAD,CAAMD,GAAG,iBAAiBC,UAAU,gBAApC,UACE,mBAAGA,UAAU,uCADf,wB,wCC0CSR,eAAQ,KAAM,CAAE8D,iBFkIC,SAAC/E,GAAD,8CAAQ,WAAOD,GAAP,eAAAa,EAAA,+EAElBL,IAAMyE,OAAN,kCAAwChF,IAFtB,OAE9Be,EAF8B,OAIpChB,EAAS,CACPG,KAAMhB,EACNiB,QAASY,EAAIC,OAGfjB,EAASJ,EAAS,qBAAsB,YATJ,gDAWpCI,EAAS,CACPG,KAAMlB,EACNmB,QAAS,CAAEP,IAAK,KAAIiD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAb5B,yDAAR,wDElIjBxD,EA/CI,SAAC,GAAsC,IAApCgE,EAAmC,EAAnCA,WAAYF,EAAuB,EAAvBA,iBAC1BG,EAAcD,EAAWhB,KAAI,SAACkB,GAAD,OACjC,+BACE,6BAAKA,EAAIC,UACT,oBAAI3D,UAAU,UAAd,SAAyB0D,EAAIE,QAC7B,+BACE,cAAC,KAAD,CAAQC,OAAO,aAAf,SAA6BC,KAAOC,IAAIL,EAAIM,QAD9C,KACgE,IAClD,OAAXN,EAAI3D,GACH,OAEA,cAAC,KAAD,CAAQ8D,OAAO,aAAf,SAA6BC,KAAOC,IAAIL,EAAI3D,SAGhD,6BACE,wBACEE,QAAS,kBAAMqD,EAAiBI,EAAIO,MACpCjE,UAAU,iBAFZ,wBAZK0D,EAAIO,QAsBf,OACE,eAAC,WAAD,WACE,oBAAIjE,UAAU,OAAd,oCACA,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,yCACA,oBAAIA,UAAU,UAAd,mBACA,oBAAIA,UAAU,UAAd,mBACA,4BAGJ,gCAAQyD,aCWDjE,eAAQ,KAAM,CAAE0E,gBHqJA,SAAC3F,GAAD,8CAAQ,WAAOD,GAAP,eAAAa,EAAA,+EAEjBL,IAAMyE,OAAN,iCAAuChF,IAFtB,OAE7Be,EAF6B,OAInChB,EAAS,CACPG,KAAMhB,EACNiB,QAASY,EAAIC,OAGfjB,EAASJ,EAAS,oBAAqB,YATJ,gDAWnCI,EAAS,CACPG,KAAMlB,EACNmB,QAAS,CAAEP,IAAK,KAAIiD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAb7B,yDAAR,wDGrJhBxD,EA/CG,SAAC,GAAoC,IAAlC2E,EAAiC,EAAjCA,UAAWD,EAAsB,EAAtBA,gBACxBE,EAAaD,EAAU3B,KAAI,SAAC6B,GAAD,OAC/B,+BACE,6BAAKA,EAAIC,SACT,oBAAItE,UAAU,UAAd,SAAyBqE,EAAIE,SAC7B,+BACE,cAAC,KAAD,CAAQV,OAAO,aAAf,SAA6BC,KAAOC,IAAIM,EAAIL,QAD9C,KACgE,IAClD,OAAXK,EAAItE,GACH,OAEA,cAAC,KAAD,CAAQ8D,OAAO,aAAf,SAA6BC,KAAOC,IAAIM,EAAItE,SAGhD,6BACE,wBACEE,QAAS,kBAAMiE,EAAgBG,EAAIJ,MACnCjE,UAAU,iBAFZ,wBAZKqE,EAAIJ,QAsBf,OACE,eAAC,WAAD,WACE,oBAAIjE,UAAU,OAAd,mCACA,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,wCACA,oBAAIA,UAAU,UAAd,oBACA,oBAAIA,UAAU,UAAd,mBACA,4BAGJ,gCAAQoE,aCuBD5E,gBALS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZ8E,QAAS/E,EAAM+E,WAGuB,CAAE1B,qBAAmB2B,cJ4JhC,yDAAM,WAAOnG,GAAP,SAAAa,EAAA,0DAC7BuF,OAAOC,QAAQ,yCADc,0CAGvB7F,IAAMyE,OAAO,gBAHU,OAK7BjF,EAAS,CAAEG,KAAMjB,IACjBc,EAAS,CAAEG,KZpNc,oBYsNzBH,EAASJ,EAAS,8CARW,gDAU7BI,EAAS,CACPG,KAAMlB,EACNmB,QAAS,CAAEP,IAAK,KAAIiD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAZnC,yDAAN,wDI5JdxD,EAvDG,SAAC,GAKZ,IAJLsD,EAII,EAJJA,kBACA2B,EAGI,EAHJA,cACQG,EAEJ,EAFJlF,KAAQkF,KAEJ,IADJJ,QAAWA,EACP,EADOA,QAAS3E,EAChB,EADgBA,QAMpB,OAJAgF,qBAAU,WACR/B,MACC,CAACA,IAEGjD,GAAsB,MAAX2E,EAChB,cAACM,EAAD,IAEA,eAAC,WAAD,WACE,oBAAI9E,UAAU,qBAAd,uBACA,oBAAGA,UAAU,OAAb,UACE,mBAAGA,UAAU,gBADf,YAC2C4E,GAAQA,EAAKjE,QAE3C,OAAZ6D,EACC,eAAC,WAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,CAAYhB,WAAYgB,EAAQhB,aAChC,cAAC,GAAD,CAAWW,UAAWK,EAAQL,YAE9B,qBAAKnE,UAAU,OAAf,SACE,yBAAQA,UAAU,iBAAiBC,QAAS,kBAAMwE,KAAlD,UACE,mBAAGzE,UAAU,sBADf,4BAOJ,eAAC,WAAD,WACE,uFACA,cAAC,IAAD,CAAMD,GAAG,kBAAkBC,UAAU,uBAArC,qCC2LKR,eAAQ,KAAM,CAAEyD,kBAAhBzD,CAAiCuF,aAlO1B,SAAC,GAAgC,IAA9B9B,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,QAAc,EACpB3B,mBAAS,CACvCoC,QAAS,GACTqB,QAAS,GACTC,SAAU,GACVjC,OAAQ,GACRkC,OAAQ,GACRC,eAAgB,GAChBC,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,UAAW,KAbuC,mBAC7ChE,EAD6C,KACnCC,EADmC,OAgBFH,oBAAS,GAhBP,mBAgB7CmE,EAhB6C,KAgBxBC,EAhBwB,KAkB9ChE,EAAW,SAACC,GAAD,OACfF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAQrD6B,EAYElC,EAZFkC,QACAqB,EAWEvD,EAXFuD,QACAC,EAUExD,EAVFwD,SACAjC,EASEvB,EATFuB,OACAkC,EAQEzD,EARFyD,OACAC,EAOE1D,EAPF0D,eACAC,EAME3D,EANF2D,IACAC,EAKE5D,EALF4D,QACAC,EAIE7D,EAJF6D,SACAC,EAGE9D,EAHF8D,SACAC,EAEE/D,EAFF+D,QACAC,EACEhE,EADFgE,UAGF,OACE,eAAC,WAAD,WACE,oBAAIzF,UAAU,qBAAd,iCACA,oBAAGA,UAAU,OAAb,UACE,mBAAGA,UAAU,gBADf,gEAIA,uDACA,uBAAMA,UAAU,OAAO+B,SAAU,SAACH,GAAD,OA5BpB,SAACA,GAChBA,EAAEI,iBACFiB,EAAcxB,EAAUyB,GA0BkBnB,CAASH,IAAjD,UACE,sBAAK5B,UAAU,aAAf,UACE,yBAAQW,KAAK,SAASmB,MAAOkB,EAAQrB,SAAU,SAACC,GAAD,OAAOD,EAASC,IAA/D,UACE,wBAAQE,MAAM,IAAd,0CACA,wBAAQA,MAAM,YAAd,6BACA,wBAAQA,MAAM,mBAAd,0CAGA,wBAAQA,MAAM,mBAAd,iCACA,wBAAQA,MAAM,sBAAd,sCAGA,wBAAQA,MAAM,aAAd,mCACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,sBAEF,uBAAO9B,UAAU,YAAjB,mEAIF,sBAAKA,UAAU,aAAf,UACE,uBACEvB,KAAK,OACLwD,YAAY,UACZtB,KAAK,UACLmB,MAAO6B,EACPhC,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,uBAAO5B,UAAU,YAAjB,8DAIF,sBAAKA,UAAU,aAAf,UACE,uBACEvB,KAAK,OACLwD,YAAY,UACZtB,KAAK,UACLmB,MAAOkD,EACPrD,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,uBAAO5B,UAAU,YAAjB,uDAIF,sBAAKA,UAAU,aAAf,UACE,uBACEvB,KAAK,OACLwD,YAAY,WACZtB,KAAK,WACLmB,MAAOmD,EACPtD,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,uBAAO5B,UAAU,YAAjB,0DAIF,sBAAKA,UAAU,aAAf,UACE,uBACEvB,KAAK,OACLwD,YAAY,WACZtB,KAAK,SACLmB,MAAOoD,EACPvD,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,uBAAO5B,UAAU,YAAjB,+IAKF,sBAAKA,UAAU,aAAf,UACE,uBACEvB,KAAK,OACLwD,YAAY,kBACZtB,KAAK,iBACLmB,MAAOqD,EACPxD,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,uBAAO5B,UAAU,YAAjB,uFAKF,sBAAKA,UAAU,aAAf,UACE,0BACEiC,YAAY,0BACZtB,KAAK,MACLmB,MAAOsD,EACPzD,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,uBAAO5B,UAAU,YAAjB,gDAGF,sBAAKA,UAAU,OAAf,UACE,wBACEC,QAAS,kBAAM0F,GAAoBD,IACnCjH,KAAK,SACLuB,UAAU,gBAHZ,sCAOA,+CAGD0F,GACC,eAAC,WAAD,WACE,sBAAK1F,UAAU,0BAAf,UACE,mBAAGA,UAAU,yBACb,uBACEvB,KAAK,OACLwD,YAAY,cACZtB,KAAK,UACLmB,MAAOuD,EACP1D,SAAU,SAACC,GAAD,OAAOD,EAASC,SAI9B,sBAAK5B,UAAU,0BAAf,UACE,mBAAGA,UAAU,0BACb,uBACEvB,KAAK,OACLwD,YAAY,eACZtB,KAAK,WACLmB,MAAOwD,EACP3D,SAAU,SAACC,GAAD,OAAOD,EAASC,SAI9B,sBAAK5B,UAAU,0BAAf,UACE,mBAAGA,UAAU,yBACb,uBACEvB,KAAK,OACLwD,YAAY,cACZtB,KAAK,UACLmB,MAAO0D,EACP7D,SAAU,SAACC,GAAD,OAAOD,EAASC,SAI9B,sBAAK5B,UAAU,0BAAf,UACE,mBAAGA,UAAU,0BACb,uBACEvB,KAAK,OACLwD,YAAY,eACZtB,KAAK,WACLmB,MAAOyD,EACP5D,SAAU,SAACC,GAAD,OAAOD,EAASC,SAI9B,sBAAK5B,UAAU,0BAAf,UACE,mBAAGA,UAAU,2BACb,uBACEvB,KAAK,OACLwD,YAAY,gBACZtB,KAAK,YACLmB,MAAO2D,EACP9D,SAAU,SAACC,GAAD,OAAOD,EAASC,YAMlC,uBAAOnD,KAAK,SAASuB,UAAU,yBAC/B,cAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,aAAxC,+BCuCOP,gBAJS,SAACC,GAAD,MAAY,CAClC+E,QAAS/E,EAAM+E,WAGuB,CAAEvB,iBAAeH,sBAA1CtD,CACbuF,aA5PkB,SAAC,GAKd,IAAD,IAJJP,QAAWA,EAIP,EAJOA,QAAS3E,EAIhB,EAJgBA,QACpBoD,EAGI,EAHJA,cACAH,EAEI,EAFJA,kBACAI,EACI,EADJA,QACI,EAC4B3B,mBAAS,CACvCoC,QAAS,GACTqB,QAAS,GACTC,SAAU,GACVjC,OAAQ,GACRkC,OAAQ,GACRC,eAAgB,GAChBC,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,UAAW,KAbT,mBACGhE,EADH,KACaC,EADb,OAgB8CH,oBAAS,GAhBvD,mBAgBGmE,EAhBH,KAgBwBC,EAhBxB,KAkBJd,qBAAU,WACR/B,IAEApB,EAAY,CACViC,QAAS9D,IAAY2E,EAAQb,QAAU,GAAKa,EAAQb,QACpDqB,QAASnF,IAAY2E,EAAQQ,QAAU,GAAKR,EAAQQ,QACpDC,SAAUpF,IAAY2E,EAAQS,SAAW,GAAKT,EAAQS,SACtDjC,OAAQnD,IAAY2E,EAAQxB,OAAS,GAAKwB,EAAQxB,OAClDkC,OAAQrF,IAAY2E,EAAQU,OAAS,GAAKV,EAAQU,OAAOU,KAAK,KAC9DT,eACEtF,IAAY2E,EAAQW,eAAiB,GAAKX,EAAQW,eACpDC,IAAKvF,IAAY2E,EAAQY,IAAM,GAAKZ,EAAQY,IAC5CC,QAASxF,IAAY2E,EAAQqB,OAAS,GAAKrB,EAAQqB,OAAOR,QAC1DC,SAAUzF,IAAY2E,EAAQqB,OAAS,GAAKrB,EAAQqB,OAAOP,SAC3DC,SAAU1F,IAAY2E,EAAQqB,OAAS,GAAKrB,EAAQqB,OAAON,SAC3DC,QAAS3F,IAAY2E,EAAQqB,OAAS,GAAKrB,EAAQqB,OAAOL,QAC1DC,UAAW5F,IAAY2E,EAAQqB,OAAS,GAAKrB,EAAQqB,OAAOJ,cAE7D,CAAC5F,EAASiD,IAEb,IAMEa,EAYElC,EAZFkC,QACAqB,EAWEvD,EAXFuD,QACAC,EAUExD,EAVFwD,SACAjC,EASEvB,EATFuB,OACAkC,EAQEzD,EARFyD,OACAC,EAOE1D,EAPF0D,eACAC,EAME3D,EANF2D,IACAC,EAKE5D,EALF4D,QACAC,EAIE7D,EAJF6D,SACAC,EAGE9D,EAHF8D,SACAC,EAEE/D,EAFF+D,QACAC,EACEhE,EADFgE,UAGI9D,EAAW,SAACC,GAAD,OACfF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAEvD,OACE,eAAC,WAAD,WACE,oBAAI9B,UAAU,qBAAd,iCACA,oBAAGA,UAAU,OAAb,UACE,mBAAGA,UAAU,gBADf,gEAIA,uDACA,uBAAMA,UAAU,OAAO+B,SAAU,SAACH,GAAD,OA/BpB,SAACA,GAChBA,EAAEI,iBACFiB,EAAcxB,EAAUyB,GAAS,GA6BSnB,CAASH,IAAjD,UACE,sBAAK5B,UAAU,aAAf,UACE,yBAAQW,KAAK,SAASmB,MAAOkB,EAAQrB,SAAU,SAACC,GAAD,OAAOD,EAASC,IAA/D,UACE,wBAAQE,MAAM,IAAd,0CACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,mBAAd,8BACA,wBAAQA,MAAM,mBAAd,8BACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,sBAAd,iCACA,wBAAQA,MAAM,aAAd,mCACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,sBAEF,uBAAO9B,UAAU,YAAjB,mEAIF,sBAAKA,UAAU,aAAf,UACE,uBACEvB,KAAK,OACLwD,YAAY,UACZtB,KAAK,UACLmB,MAAO6B,EACPhC,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,uBAAO5B,UAAU,YAAjB,8DAIF,sBAAKA,UAAU,aAAf,UACE,uBACEvB,KAAK,OACLwD,YAAY,UACZtB,KAAK,UACLmB,MAAOkD,EACPrD,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,uBAAO5B,UAAU,YAAjB,uDAIF,sBAAKA,UAAU,aAAf,UACE,uBACEvB,KAAK,OACLwD,YAAY,WACZtB,KAAK,WACLmB,MAAOmD,EACPtD,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,uBAAO5B,UAAU,YAAjB,0DAIF,sBAAKA,UAAU,aAAf,UACE,uBACEvB,KAAK,OACLwD,YAAY,WACZtB,KAAK,SACLmB,MAAOoD,EACPvD,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,uBAAO5B,UAAU,YAAjB,gFAIF,sBAAKA,UAAU,aAAf,UACE,uBACEvB,KAAK,OACLwD,YAAY,kBACZtB,KAAK,iBACLmB,MAAOqD,EACPxD,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,uBAAO5B,UAAU,YAAjB,uFAKF,sBAAKA,UAAU,aAAf,UACE,0BACEiC,YAAY,0BACZtB,KAAK,MACLmB,MAAOsD,EACPzD,SAAU,SAACC,GAAD,OAAOD,EAASC,MAE5B,uBAAO5B,UAAU,YAAjB,gDAGF,sBAAKA,UAAU,OAAf,UACE,wBACEC,QAAS,kBAAM0F,GAAoBD,IACnCjH,KAAK,SACLuB,UAAU,gBAHZ,sCAOA,+CAGD0F,GACC,eAAC,WAAD,WACE,sBAAK1F,UAAU,0BAAf,UACE,mBAAGA,UAAU,yBACb,uBACEvB,KAAK,OACLwD,YAAY,cACZtB,KAAK,UACLmB,MAAOuD,EACP1D,SAAU,SAACC,GAAD,OAAOD,EAASC,SAI9B,sBAAK5B,UAAU,0BAAf,UACE,mBAAGA,UAAU,0BACb,uBACEvB,KAAK,OACLwD,YAAY,eACZtB,KAAK,WACLmB,MAAOwD,EACP3D,SAAU,SAACC,GAAD,OAAOD,EAASC,SAI9B,sBAAK5B,UAAU,0BAAf,UACE,mBAAGA,UAAU,yBACb,uBACEvB,KAAK,OACLwD,YAAY,cACZtB,KAAK,UACLmB,MAAO0D,EACP7D,SAAU,SAACC,GAAD,OAAOD,EAASC,SAI9B,sBAAK5B,UAAU,0BAAf,UACE,mBAAGA,UAAU,0BACb,uBACEvB,KAAK,OACLwD,YAAY,eACZtB,KAAK,WACLmB,MAAOyD,EACP5D,SAAU,SAACC,GAAD,OAAOD,EAASC,SAI9B,sBAAK5B,UAAU,0BAAf,UACE,mBAAGA,UAAU,2BACb,uBACEvB,KAAK,OACLwD,YAAY,gBACZtB,KAAK,YACLmB,MAAO2D,EACP9D,SAAU,SAACC,GAAD,OAAOD,EAASC,YAMlC,uBAAOnD,KAAK,SAASuB,UAAU,yBAC/B,cAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,aAAxC,+BClHOP,eAAQ,KAAM,CAAEsG,cPPF,SAACrE,EAAUyB,GAAX,8CAAuB,WAAO5E,GAAP,mBAAAa,EAAA,sEAE1C2B,EAAS,CACb9B,QAAS,CACP,eAAgB,qBAJ4B,SAQ9BF,IAAMiH,IAAI,0BAA2BtE,EAAUX,GARjB,OAQ1CxB,EAR0C,OAUhDhB,EAAS,CACPG,KAAMhB,EACNiB,QAASY,EAAIC,OAGfjB,EAASJ,EAAS,mBAAoB,YAEtCgF,EAAQE,KAAK,cAjBmC,mDAmB1CjC,EAAS,KAAIC,SAAS7B,KAAK4B,SAG/BA,EAAOE,SAAQ,SAACC,GAAD,OAAWhD,EAASJ,EAASoD,EAAMnD,IAAK,cAGzDG,EAAS,CACPG,KAAMlB,EACNmB,QAAS,CAAEP,IAAK,KAAIiD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UA3BhB,0DAAvB,wDOOdxD,CAAiCuF,aAvH1B,SAAC,GAAgC,IAA9Be,EAA6B,EAA7BA,cAAe5C,EAAc,EAAdA,QAAc,EACpB3B,mBAAS,CACvCoC,QAAS,GACTC,MAAO,GACPqB,SAAU,GACVjB,KAAM,GACNjE,GAAI,GACJiG,SAAS,EACTC,YAAa,KARqC,mBAC7CxE,EAD6C,KACnCC,EADmC,OAWXH,oBAAS,GAXE,mBAW7C2E,EAX6C,KAW7BC,EAX6B,KAa5CxC,EAA6DlC,EAA7DkC,QAASC,EAAoDnC,EAApDmC,MAAOqB,EAA6CxD,EAA7CwD,SAAUjB,EAAmCvC,EAAnCuC,KAAMjE,EAA6B0B,EAA7B1B,GAAIiG,EAAyBvE,EAAzBuE,QAASC,EAAgBxE,EAAhBwE,YAE/CtE,EAAW,SAACC,GAAD,OACfF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAEvD,OACE,eAAC,WAAD,WACE,oBAAI9B,UAAU,qBAAd,+BACA,oBAAGA,UAAU,OAAb,UACE,mBAAGA,UAAU,uBADf,4EAIA,uDACA,uBACEA,UAAU,OACV+B,SAAU,SAACH,GACTA,EAAEI,iBACF8D,EAAcrE,EAAUyB,IAJ5B,UAOE,qBAAKlD,UAAU,aAAf,SACE,uBACEvB,KAAK,OACLwD,YAAY,cACZtB,KAAK,QACLmB,MAAO8B,EACPjC,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BO,UAAQ,MAGZ,qBAAKnC,UAAU,aAAf,SACE,uBACEvB,KAAK,OACLwD,YAAY,YACZtB,KAAK,UACLmB,MAAO6B,EACPhC,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BO,UAAQ,MAGZ,qBAAKnC,UAAU,aAAf,SACE,uBACEvB,KAAK,OACLwD,YAAY,WACZtB,KAAK,WACLmB,MAAOmD,EACPtD,SAAU,SAACC,GAAD,OAAOD,EAASC,QAG9B,sBAAK5B,UAAU,aAAf,UACE,2CACA,uBACEvB,KAAK,OACLkC,KAAK,OACLmB,MAAOkC,EACPrC,SAAU,SAACC,GAAD,OAAOD,EAASC,SAG9B,qBAAK5B,UAAU,aAAf,SACE,8BACE,uBACEvB,KAAK,WACLkC,KAAK,UACLyF,QAASJ,EACTlE,MAAOkE,EACPrE,SAAU,WACRD,EAAY,2BAAKD,GAAN,IAAgBuE,SAAUA,KACrCG,GAAgBD,MAEjB,IAVL,mBAcF,sBAAKlG,UAAU,aAAf,UACE,yCACA,uBACEvB,KAAK,OACLkC,KAAK,KACLmB,MAAO/B,EACP4B,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1ByE,SAAUH,EAAiB,WAAa,QAG5C,qBAAKlG,UAAU,aAAf,SACE,0BACEW,KAAK,cACL2F,KAAK,KACLC,KAAK,IACLtE,YAAY,kBACZH,MAAOmE,EACPtE,SAAU,SAACC,GAAD,OAAOD,EAASC,QAG9B,uBAAOnD,KAAK,SAASuB,UAAU,yBAC/B,cAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,aAAxC,+BCoBOP,eAAQ,KAAM,CAAEgH,aRkBH,SAAC/E,EAAUyB,GAAX,8CAAuB,WAAO5E,GAAP,mBAAAa,EAAA,sEAEzC2B,EAAS,CACb9B,QAAS,CACP,eAAgB,qBAJ2B,SAQ7BF,IAAMiH,IAAI,yBAA0BtE,EAAUX,GARjB,OAQzCxB,EARyC,OAU/ChB,EAAS,CACPG,KAAMhB,EACNiB,QAASY,EAAIC,OAGfjB,EAASJ,EAAS,kBAAmB,YAErCgF,EAAQE,KAAK,cAjBkC,mDAmBzCjC,EAAS,KAAIC,SAAS7B,KAAK4B,SAG/BA,EAAOE,SAAQ,SAACC,GAAD,OAAWhD,EAASJ,EAASoD,EAAMnD,IAAK,cAGzDG,EAAS,CACPG,KAAMlB,EACNmB,QAAS,CAAEP,IAAK,KAAIiD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UA3BjB,0DAAvB,wDQlBbxD,CAAgCuF,aA/H1B,SAAC,GAA+B,IAA7ByB,EAA4B,EAA5BA,aAActD,EAAc,EAAdA,QAAc,EAClB3B,mBAAS,CACvC+C,OAAQ,GACRC,OAAQ,GACRkC,aAAc,GACdzC,KAAM,GACNjE,GAAI,GACJiG,SAAS,EACTC,YAAa,KARmC,mBAC3CxE,EAD2C,KACjCC,EADiC,OAWTH,oBAAS,GAXA,mBAW3C2E,EAX2C,KAW3BC,EAX2B,KAchD7B,EAOE7C,EAPF6C,OACAC,EAME9C,EANF8C,OACAkC,EAKEhF,EALFgF,aACAzC,EAIEvC,EAJFuC,KACAjE,EAGE0B,EAHF1B,GACAiG,EAEEvE,EAFFuE,QACAC,EACExE,EADFwE,YAGItE,EAAW,SAACC,GAAD,OACfF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOlB,KAAOiB,EAAEC,OAAOC,UAEvD,OACE,eAAC,WAAD,WACE,oBAAI9B,UAAU,qBAAd,gCACA,oBAAGA,UAAU,OAAb,UACE,mBAAGA,UAAU,uBADf,wDAIA,uDACA,uBACEA,UAAU,OACV+B,SAAU,SAACH,GACTA,EAAEI,iBACFwE,EAAa/E,EAAUyB,IAJ3B,UAOE,qBAAKlD,UAAU,aAAf,SACE,uBACEvB,KAAK,OACLwD,YAAY,uBACZtB,KAAK,SACLmB,MAAOwC,EACP3C,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BO,UAAQ,MAGZ,qBAAKnC,UAAU,aAAf,SACE,uBACEvB,KAAK,OACLwD,YAAY,0BACZtB,KAAK,SACLmB,MAAOyC,EACP5C,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BO,UAAQ,MAGZ,qBAAKnC,UAAU,aAAf,SACE,uBACEvB,KAAK,OACLwD,YAAY,mBACZtB,KAAK,eACLmB,MAAO2E,EACP9E,SAAU,SAACC,GAAD,OAAOD,EAASC,QAG9B,sBAAK5B,UAAU,aAAf,UACE,2CACA,uBACEvB,KAAK,OACLkC,KAAK,OACLmB,MAAOkC,EACPrC,SAAU,SAACC,GAAD,OAAOD,EAASC,SAG9B,qBAAK5B,UAAU,aAAf,SACE,8BACE,uBACEvB,KAAK,WACLkC,KAAK,UACLyF,QAASJ,EACTlE,MAAOkE,EACPrE,SAAU,WACRD,EAAY,2BAAKD,GAAN,IAAgBuE,SAAUA,KACrCG,GAAgBD,MAEjB,IAVL,sBAcF,sBAAKlG,UAAU,aAAf,UACE,yCACA,uBACEvB,KAAK,OACLkC,KAAK,KACLmB,MAAO/B,EACP4B,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1ByE,SAAUH,EAAiB,WAAa,QAG5C,qBAAKlG,UAAU,aAAf,SACE,0BACEW,KAAK,cACL2F,KAAK,KACLC,KAAK,IACLtE,YAAY,sBACZH,MAAOmE,EACPtE,SAAU,SAACC,GAAD,OAAOD,EAASC,QAG9B,uBAAOnD,KAAK,SAASuB,UAAU,yBAC/B,cAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,aAAxC,+BChFO2G,GArCK,SAAC,GAQd,IAAD,IAPJlC,QAOI,IANFI,KAAQX,EAMN,EANMA,IAAKtD,EAMX,EANWA,KAAMgG,EAMjB,EANiBA,OACnB3D,EAKE,EALFA,OACAW,EAIE,EAJFA,QACAsB,EAGE,EAHFA,SACAC,EAEE,EAFFA,OAGF,OACE,sBAAKlF,UAAU,mBAAf,UACE,qBAAKG,IAAKwG,EAAQtG,IAAI,GAAGL,UAAU,cACnC,gCACE,6BAAKW,IACL,8BACGqC,EADH,IACYW,GAAW,wCAAWA,QAElC,mBAAG3D,UAAU,OAAb,SAAqBiF,GAAY,+BAAOA,MACxC,cAAC,IAAD,CAAMlF,GAAE,mBAAckE,GAAOjE,UAAU,kBAAvC,6BAIF,6BACGkF,EAAO0B,MAAM,EAAG,GAAGpE,KAAI,SAACqE,EAAOC,GAAR,OACtB,qBAAgB9G,UAAU,eAA1B,UACE,mBAAGA,UAAU,iBADf,IACkC6G,IADzBC,YCmBJtH,gBAJS,SAACC,GAAD,MAAY,CAClC+E,QAAS/E,EAAM+E,WAGuB,CAAEuC,YVlCf,yDAAM,WAAOzI,GAAP,eAAAa,EAAA,6DAC/Bb,EAAS,CAAEG,KAAMjB,IADc,kBAIXsB,IAAMO,IAAI,gBAJC,OAIvBC,EAJuB,OAM7BhB,EAAS,CACPG,KAAMpB,EACNqB,QAASY,EAAIC,OARc,gDAW7BjB,EAAS,CACPG,KAAMlB,EACNmB,QAAS,CAAEP,IAAK,KAAIiD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAbnC,yDAAN,wDUkCZxD,EAxCE,SAAC,GAAqD,IAAnDuH,EAAkD,EAAlDA,YAAkD,IAArCvC,QAAWwC,EAA0B,EAA1BA,SAAUnH,EAAgB,EAAhBA,QAKpD,OAJAgF,qBAAU,WACRkC,MACC,CAACA,IAGF,cAAC,WAAD,UACGlH,EACC,cAACiF,EAAD,IAEA,eAAC,WAAD,WACE,oBAAI9E,UAAU,qBAAd,wBACA,oBAAGA,UAAU,OAAb,UACE,mBAAGA,UAAU,0BADf,sDAIA,qBAAKA,UAAU,WAAf,SACGgH,EAASzE,OAAS,EACjByE,EAASxE,KAAI,SAACgC,GAAD,OACX,cAAC,GAAD,CAA+BA,QAASA,GAAtBA,EAAQP,QAG5B,gECgCCgD,GA1DI,SAAC,GASb,IAAD,IARJzC,QACExB,EAOE,EAPFA,OACAW,EAME,EANFA,QACAsB,EAKE,EALFA,SACAD,EAIE,EAJFA,QACAa,EAGE,EAHFA,OAGE,IAFFjB,KAAQjE,EAEN,EAFMA,KAAMgG,EAEZ,EAFYA,OAGhB,OACE,sBAAK3G,UAAU,6BAAf,UACE,qBAAKA,UAAU,iBAAiBG,IAAKwG,EAAQtG,IAAI,KACjD,oBAAIL,UAAU,QAAd,SAAuBW,IACvB,oBAAGX,UAAU,OAAb,UACGgD,EADH,IACYW,GAAW,wCAAWA,QAElC,4BAAIsB,GAAY,+BAAOA,MACvB,sBAAKjF,UAAU,aAAf,UACGgF,GACC,mBAAGkC,KAAMlC,EAASnD,OAAO,SAASsF,IAAI,sBAAtC,SACE,mBAAGnH,UAAU,yBAGhB6F,GAAUA,EAAOR,SAChB,mBAAG6B,KAAMrB,EAAOR,QAASxD,OAAO,SAASsF,IAAI,sBAA7C,SACE,mBAAGnH,UAAU,2BAGhB6F,GAAUA,EAAOP,UAChB,mBAAG4B,KAAMrB,EAAOP,SAAUzD,OAAO,SAASsF,IAAI,sBAA9C,SACE,mBAAGnH,UAAU,4BAGhB6F,GAAUA,EAAON,UAChB,mBAAG2B,KAAMrB,EAAON,SAAU1D,OAAO,SAASsF,IAAI,sBAA9C,SACE,mBAAGnH,UAAU,4BAGhB6F,GAAUA,EAAOL,SAChB,mBAAG0B,KAAMrB,EAAOL,QAAS3D,OAAO,SAASsF,IAAI,sBAA7C,SACE,mBAAGnH,UAAU,2BAGhB6F,GAAUA,EAAOJ,WAChB,mBAAGyB,KAAMrB,EAAOJ,UAAW5D,OAAO,SAASsF,IAAI,sBAA/C,SACE,mBAAGnH,UAAU,oCChBVoH,GA9BM,SAAC,GAAD,QACnB5C,QACEY,EAFiB,EAEjBA,IACAF,EAHiB,EAGjBA,OACQvE,EAJS,EAIjBiE,KAAQjE,KAJS,OAOnB,sBAAKX,UAAU,6BAAf,UACGoF,GACC,eAAC,WAAD,WACE,qBAAIpF,UAAU,eAAd,UAA8BW,EAAK0G,OAAOC,MAAM,KAAK,GAArD,YACA,4BAAIlC,IACJ,qBAAKpF,UAAU,YAGnB,oBAAIA,UAAU,eAAd,uBACA,qBAAKA,UAAU,SAAf,SACGkF,EAAO1C,KAAI,SAACqE,EAAOC,GAAR,OACV,sBAAiB9G,UAAU,MAA3B,UACE,mBAAGA,UAAU,iBADf,IACkC6G,IADxBC,YCSHS,GAzBW,SAAC,GAAD,QACxB/D,WAAcG,EADU,EACVA,QAASC,EADC,EACDA,MAAOqB,EADN,EACMA,SAAmBlF,GADzB,EACgBiG,QADhB,EACyBjG,IAAIiE,EAD7B,EAC6BA,KAAMiC,EADnC,EACmCA,YADnC,OAGxB,gCACE,oBAAIjG,UAAU,YAAd,SAA2B2D,IAC3B,8BACE,cAAC,KAAD,CAAQE,OAAO,aAAf,SAA6BC,KAAOC,IAAIC,KAD1C,KAC4D,IACxDjE,EAAc,cAAC,KAAD,CAAQ8D,OAAO,aAAf,SAA6BC,KAAOC,IAAIhE,KAAjD,UAET,8BACE,gDADF,IAC+B6D,KAE/B,8BACE,gDADF,IAC+BqB,KAE/B,8BACE,mDADF,IACkCgB,SCSvBuB,GAzBU,SAAC,GAAD,QACvBrD,UAAaG,EADU,EACVA,OAAQC,EADE,EACFA,OAAQkC,EADN,EACMA,aAAuB1G,GAD7B,EACoBiG,QADpB,EAC6BjG,IAAIiE,EADjC,EACiCA,KAAMiC,EADvC,EACuCA,YADvC,OAGvB,gCACE,oBAAIjG,UAAU,YAAd,SAA2BsE,IAC3B,8BACE,cAAC,KAAD,CAAQT,OAAO,aAAf,SAA6BC,KAAOC,IAAIC,KAD1C,KAC4D,IACxDjE,EAAc,cAAC,KAAD,CAAQ8D,OAAO,aAAf,SAA6BC,KAAOC,IAAIhE,KAAjD,UAET,8BACE,8CADF,IAC6BwE,KAE7B,8BACE,sDADF,IACqCkC,KAErC,8BACE,mDADF,IACkCR,SCsCvBzG,gBAJS,SAACC,GAAD,MAAY,CAClCgI,MAAOhI,EAAM+E,QAAQiD,SAGiB,CAAEC,ef3BZ,SAACC,GAAD,8CAAc,WAAOrJ,GAAP,eAAAa,EAAA,+EAEtBL,IAAMO,IAAN,8BAAiCsI,IAFX,OAElCrI,EAFkC,OAIxChB,EAAS,CACPG,KAAMnB,EACNoB,QAASY,EAAIC,OANyB,gDASxCjB,EAAS,CACPG,KAAMlB,EACNmB,QAAS,CAAEP,IAAK,KAAIiD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAXxB,yDAAd,wDe2BfxD,EArDO,SAAC,GAAyC,IAAvCmI,EAAsC,EAAtCA,SAAUD,EAA4B,EAA5BA,eAAgBD,EAAY,EAAZA,MAKjD,OAJA5C,qBAAU,WACR6C,EAAeC,KACd,CAACD,IAGF,sBAAK1H,UAAU,iBAAf,UACE,oBAAIA,UAAU,oBAAd,0BACW,OAAVyH,EACC,cAAC3C,EAAD,IAEA2C,EAAMjF,KAAI,SAACoF,GAAD,OACR,sBAAmB5H,UAAU,yBAA7B,UACE,gCACE,6BACE,mBACEkH,KAAMU,EAAKC,SACXhG,OAAO,SACPsF,IAAI,sBAHN,SAKGS,EAAKjH,SAGV,4BAAIiH,EAAK3B,iBAEX,8BACE,+BACE,qBAAIjG,UAAU,sBAAd,oBACU4H,EAAKE,oBAEf,qBAAI9H,UAAU,mBAAd,uBACa4H,EAAKG,kBAElB,qBAAI/H,UAAU,oBAAd,oBAA0C4H,EAAKI,sBArB3CJ,EAAKrJ,aC4EViB,gBALS,SAACC,GAAD,MAAY,CAClC+E,QAAS/E,EAAM+E,QACf9E,KAAMD,EAAMC,QAG0B,CAAEuI,ehB7CZ,SAACC,GAAD,8CAAY,WAAO5J,GAAP,eAAAa,EAAA,+EAEpBL,IAAMO,IAAN,4BAA+B6I,IAFX,OAEhC5I,EAFgC,OAItChB,EAAS,CACPG,KAAMrB,EACNsB,QAASY,EAAIC,OANuB,gDAStCjB,EAAS,CACPG,KAAMlB,EACNmB,QAAS,CAAEP,IAAK,KAAIiD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAX1B,yDAAZ,wDgB6CfxD,EAlFC,SAAC,GAKV,IAJLyI,EAII,EAJJA,eAII,IAHJzD,QAAWA,EAGP,EAHOA,QAAS3E,EAGhB,EAHgBA,QACpBH,EAEI,EAFJA,KACAyI,EACI,EADJA,MAMA,OAJAtD,qBAAU,WACRoD,EAAeE,EAAMC,OAAO7J,MAC3B,CAAC0J,EAAgBE,EAAMC,OAAO7J,KAG/B,cAAC,WAAD,UACe,OAAZiG,GAAoB3E,EACnB,cAACiF,EAAD,IAEA,eAAC,WAAD,WACE,cAAC,IAAD,CAAM/E,GAAG,YAAYC,UAAU,gBAA/B,8BAGCN,EAAKE,kBACa,IAAjBF,EAAKG,SACLH,EAAKkF,KAAKX,MAAQO,EAAQI,KAAKX,KAC7B,cAAC,IAAD,CAAMlE,GAAG,gBAAgBC,UAAU,eAAnC,0BAIJ,sBAAKA,UAAU,oBAAf,UACE,cAAC,GAAD,CAAYwE,QAASA,IACrB,cAAC,GAAD,CAAcA,QAASA,IACvB,sBAAKxE,UAAU,2BAAf,UACE,oBAAIA,UAAU,eAAd,wBACCwE,EAAQhB,WAAWjB,OAAS,EAC3B,cAAC,WAAD,UACGiC,EAAQhB,WAAWhB,KAAI,SAACgB,GAAD,OACtB,cAAC,GAAD,CAEEA,WAAYA,GADPA,EAAWS,UAMtB,8DAIJ,sBAAKjE,UAAU,2BAAf,UACE,oBAAIA,UAAU,eAAd,uBACCwE,EAAQL,UAAU5B,OAAS,EAC1B,cAAC,WAAD,UACGiC,EAAQL,UAAU3B,KAAI,SAAC2B,GAAD,OACrB,cAAC,GAAD,CAEEA,UAAWA,GADNA,EAAUF,UAMrB,6DAIHO,EAAQW,gBACP,cAAC,GAAD,CAAewC,SAAUnD,EAAQW,4BCnEzCkD,GAAW,SAAC,GAAD,IACfC,EADe,EACfA,QACAC,EAFe,EAEfA,WACAC,EAHe,EAGfA,WACA9I,EAJe,EAIfA,KAJe,IAKfwB,KAAQ+C,EALO,EAKPA,IAAKwE,EALE,EAKFA,KAAM9H,EALJ,EAKIA,KAAMgG,EALV,EAKUA,OAAQ/B,EALlB,EAKkBA,KAAM8D,EALxB,EAKwBA,MAAOC,EAL/B,EAK+BA,SAAUC,EALzC,EAKyCA,KACxDC,EANe,EAMfA,YANe,OAQf,sBAAK7I,UAAU,yBAAf,UACE,8BACE,eAAC,IAAD,CAAMD,GAAE,mBAAc6E,GAAtB,UACE,qBAAK5E,UAAU,YAAYG,IAAKwG,EAAQtG,IAAI,KAC5C,6BAAKM,SAGT,gCACE,mBAAGX,UAAU,OAAb,SAAqByI,IACrB,oBAAGzI,UAAU,YAAb,uBACY,cAAC,KAAD,CAAQ6D,OAAO,aAAf,SAA6B+E,OAGxCC,GACC,eAAC,WAAD,WACE,yBACE5I,QAAS,kBAAMqI,EAAQrE,IACvBxF,KAAK,SACLuB,UAAU,gBAHZ,UAKE,mBAAGA,UAAU,qBAAsB,IACnC,+BAAO0I,EAAMnG,OAAS,GAAK,+BAAOmG,EAAMnG,cAE1C,wBACEtC,QAAS,kBAAMsI,EAAWtE,IAC1BxF,KAAK,SACLuB,UAAU,gBAHZ,SAKE,mBAAGA,UAAU,yBAEf,eAAC,IAAD,CAAMD,GAAE,iBAAYkE,GAAOjE,UAAU,kBAArC,uBACa,IACV2I,EAASpG,OAAS,GACjB,sBAAMvC,UAAU,gBAAhB,SAAiC2I,EAASpG,aAG5C7C,EAAKG,SAAW+E,IAASlF,EAAKkF,KAAKX,KACnC,wBACEhE,QAAS,kBAAMuI,EAAWvE,IAC1BxF,KAAK,SACLuB,UAAU,iBAHZ,SAKE,mBAAGA,UAAU,6BAS3BqI,GAASS,aAAe,CACtBD,aAAa,GAYf,IAIerJ,gBAJS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,QAG0B,CAAE4I,QCpDnB,SAAC/J,GAAD,8CAAQ,WAAOD,GAAP,eAAAa,EAAA,+EAETL,IAAMiH,IAAN,0BAA6BxH,IAFpB,OAErBe,EAFqB,OAI3BhB,EAAS,CACPG,KAAMZ,EACNa,QAAS,CAAEH,KAAImK,MAAOpJ,EAAIC,QAND,gDAS3BjB,EAAS,CACPG,KAAMb,EACNc,QAAS,CAAEP,IAAK,KAAIiD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAXrC,yDAAR,uDDoD4BuF,WCnCzB,SAAChK,GAAD,8CAAQ,WAAOD,GAAP,eAAAa,EAAA,+EAEZL,IAAMiH,IAAN,4BAA+BxH,IAFnB,OAExBe,EAFwB,OAI9BhB,EAAS,CACPG,KAAMZ,EACNa,QAAS,CAAEH,KAAImK,MAAOpJ,EAAIC,QANE,gDAS9BjB,EAAS,CACPG,KAAMb,EACNc,QAAS,CAAEP,IAAK,KAAIiD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAXlC,yDAAR,uDDmCqCwF,WClBrC,SAACjK,GAAD,8CAAQ,WAAOD,GAAP,SAAAa,EAAA,+EAExBL,IAAMyE,OAAN,qBAA2BhF,IAFH,OAI9BD,EAAS,CACPG,KAAMX,EACNY,QAASH,IAGXD,EAASJ,EAAS,eAAgB,YATJ,gDAW9BI,EAAS,CACPG,KAAMb,EACNc,QAAS,CAAEP,IAAK,KAAIiD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAblC,yDAAR,wDDkBXxD,CACb6I,IE5Ca7I,eAAQ,KAAM,CAAEuJ,QD4CR,SAACtH,GAAD,8CAAc,WAAOnD,GAAP,iBAAAa,EAAA,6DAC7B2B,EAAS,CACb9B,QAAS,CACP,eAAgB,qBAHe,kBAQfF,IAAMoC,KAAK,aAAcO,EAAUX,GARpB,OAQ3BxB,EAR2B,OAUjChB,EAAS,CACPG,KAAMV,EACNW,QAASY,EAAIC,OAGfjB,EAASJ,EAAS,eAAgB,YAfD,gDAiBjCI,EAAS,CACPG,KAAMb,EACNc,QAAS,CAAEP,IAAK,KAAIiD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAnB/B,yDAAd,wDC5CRxD,EAnCE,SAAC,GAAiB,IAAfuJ,EAAc,EAAdA,QAAc,EACRxH,mBAAS,IADD,mBACzBkH,EADyB,KACnBO,EADmB,KAGhC,OACE,sBAAKhJ,UAAU,YAAf,UACE,qBAAKA,UAAU,eAAf,SACE,oDAEF,uBACEA,UAAU,YACV+B,SAAU,SAACH,GACTA,EAAEI,iBACF+G,EAAQ,CAAEN,SACVO,EAAQ,KALZ,UAQE,0BACErI,KAAK,OACL2F,KAAK,KACLC,KAAK,IACLtE,YAAY,gBACZH,MAAO2G,EACP9G,SAAU,SAACC,GAAD,OAAOoH,EAAQpH,EAAEC,OAAOC,QAClCK,UAAQ,IAEV,uBAAO1D,KAAK,SAASuB,UAAU,oBAAoB8B,MAAM,oBCUlDtC,gBAJS,SAACC,GAAD,MAAY,CAClCyB,KAAMzB,EAAMyB,QAG0B,CAAE+H,SF1BlB,yDAAM,WAAO3K,GAAP,eAAAa,EAAA,+EAERL,IAAMO,IAAI,cAFF,OAEpBC,EAFoB,OAI1BhB,EAAS,CACPG,KAAMf,EACNgB,QAASY,EAAIC,OANW,gDAS1BjB,EAAS,CACPG,KAAMb,EACNc,QAAS,CAAEP,IAAK,KAAIiD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAXtC,yDAAN,wDE0BTxD,EAhCD,SAAC,GAA4C,IAA1CyJ,EAAyC,EAAzCA,SAAyC,IAA/B/H,KAAQgI,EAAuB,EAAvBA,MAAOrJ,EAAgB,EAAhBA,QAKxC,OAJAgF,qBAAU,WACRoE,MACC,CAACA,IAEGpJ,EACL,cAACiF,EAAD,IAEA,eAAC,WAAD,WACE,oBAAI9E,UAAU,qBAAd,mBACA,oBAAGA,UAAU,OAAb,UACE,mBAAGA,UAAU,gBADf,+BAGA,cAAC,GAAD,IACA,qBAAKA,UAAU,QAAf,SACGkJ,EAAM1G,KAAI,SAACtB,GAAD,OACT,cAAC,GAAD,CAAyBA,KAAMA,GAAhBA,EAAK+C,gBCgBfzE,eAAQ,KAAM,CAAE2J,WHsFL,SAACC,EAAQ3H,GAAT,8CAAsB,WAAOnD,GAAP,iBAAAa,EAAA,6DACxC2B,EAAS,CACb9B,QAAS,CACP,eAAgB,qBAH0B,kBAQ1BF,IAAMoC,KAAN,6BACMkI,GACtB3H,EACAX,GAX0C,OAQtCxB,EARsC,OAc5ChB,EAAS,CACPG,KAAMT,EACNU,QAASY,EAAIC,OAGfjB,EAASJ,EAAS,gBAAiB,YAnBS,gDAqB5CI,EAAS,CACPG,KAAMb,EACNc,QAAS,CAAEP,IAAK,KAAIiD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAvBpB,yDAAtB,wDGtFXxD,EAnCK,SAAC,GAA4B,IAA1B4J,EAAyB,EAAzBA,OAAQD,EAAiB,EAAjBA,WAAiB,EACtB5H,mBAAS,IADa,mBACvCkH,EADuC,KACjCO,EADiC,KAG9C,OACE,sBAAKhJ,UAAU,YAAf,UACE,qBAAKA,UAAU,eAAf,SACE,mDAEF,uBACEA,UAAU,YACV+B,SAAU,SAACH,GACTA,EAAEI,iBACFmH,EAAWC,EAAQ,CAAEX,SACrBO,EAAQ,KALZ,UAQE,0BACErI,KAAK,OACL2F,KAAK,KACLC,KAAK,IACLtE,YAAY,mBACZH,MAAO2G,EACP9G,SAAU,SAACC,GAAD,OAAOoH,EAAQpH,EAAEC,OAAOC,QAClCK,UAAQ,IAEV,uBAAO1D,KAAK,SAASuB,UAAU,oBAAoB8B,MAAM,oBCmBlDtC,gBAJS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,QAG0B,CAAE2J,cJ0Gb,SAACD,EAAQE,GAAT,8CAAuB,WAAOhL,GAAP,SAAAa,EAAA,+EAE1CL,IAAMyE,OAAN,6BAAmC6F,EAAnC,YAA6CE,IAFH,OAIhDhL,EAAS,CACPG,KAAMR,EACNS,QAAS4K,IAGXhL,EAASJ,EAAS,kBAAmB,YATW,gDAWhDI,EAAS,CACPG,KAAMb,EACNc,QAAS,CAAEP,IAAK,KAAIiD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAbhB,yDAAvB,wDI1GdxD,EA1CK,SAAC,GAAD,IAClB4J,EADkB,EAClBA,OADkB,IAElBG,QAAWtF,EAFO,EAEPA,IAAKwE,EAFE,EAEFA,KAAM9H,EAFJ,EAEIA,KAAMgG,EAFV,EAEUA,OAAQ/B,EAFlB,EAEkBA,KAAMgE,EAFxB,EAEwBA,KAC1ClJ,EAHkB,EAGlBA,KACA2J,EAJkB,EAIlBA,cAJkB,OAMlB,sBAAKrJ,UAAU,yBAAf,UACE,8BACE,eAAC,IAAD,CAAMD,GAAE,mBAAc6E,GAAtB,UACE,qBAAK5E,UAAU,YAAYG,IAAKwG,EAAQtG,IAAI,KAC5C,6BAAKM,SAGT,gCACE,mBAAGX,UAAU,OAAb,SAAqByI,IACrB,oBAAGzI,UAAU,YAAb,uBACY,cAAC,KAAD,CAAQ6D,OAAO,aAAf,SAA6B+E,QAEvClJ,EAAKG,SAAW+E,IAASlF,EAAKkF,KAAKX,KACnC,wBACEhE,QAAS,kBAAMoJ,EAAcD,EAAQnF,IACrCxF,KAAK,SACLuB,UAAU,iBAHZ,SAKE,mBAAGA,UAAU,4BCWRR,gBAJS,SAACC,GAAD,MAAY,CAClCyB,KAAMzB,EAAMyB,QAG0B,CAAEsI,QLmEnB,SAACjL,GAAD,8CAAQ,WAAOD,GAAP,eAAAa,EAAA,+EAETL,IAAMO,IAAN,qBAAwBd,IAFf,OAErBe,EAFqB,OAI3BhB,EAAS,CACPG,KAAMd,EACNe,QAASY,EAAIC,OANY,gDAS3BjB,EAAS,CACPG,KAAMb,EACNc,QAAS,CAAEP,IAAK,KAAIiD,SAAS2B,WAAYC,OAAQ,KAAI5B,SAAS4B,UAXrC,yDAAR,wDKnERxD,EAhCF,SAAC,GAAiD,IAA/CgK,EAA8C,EAA9CA,QAA8C,IAArCtI,KAAQA,EAA6B,EAA7BA,KAAMrB,EAAuB,EAAvBA,QAAWsI,EAAY,EAAZA,MAKhD,OAJAtD,qBAAU,WACR2E,EAAQrB,EAAMC,OAAO7J,MACpB,CAACiL,EAASrB,EAAMC,OAAO7J,KAEnBsB,GAAoB,OAATqB,EAChB,cAAC4D,EAAD,IAEA,eAAC,WAAD,WACE,cAAC,IAAD,CAAM/E,GAAG,SAASC,UAAU,MAA5B,2BAGA,cAAC,GAAD,CAAUkB,KAAMA,EAAM2H,aAAa,IACnC,cAAC,GAAD,CAAaO,OAAQlI,EAAK+C,MAC1B,qBAAKjE,UAAU,WAAf,SACGkB,EAAKyH,SAASnG,KAAI,SAAC+G,GAAD,OACjB,cAAC,GAAD,CAA+BA,QAASA,EAASH,OAAQlI,EAAK+C,KAA5CsF,EAAQtF,gB,4CCxB9BwF,GAAe,GCQfA,GAAe,CACnB5K,MAAOO,aAAasK,QAAQ,SAC5B9J,gBAAiB,KACjBC,SAAS,EACT+E,KAAM,MCLF6E,GAAe,CACnBjF,QAAS,KACTwC,SAAU,GACVS,MAAO,GACP5H,SAAS,EACTyB,MAAO,ICHHmI,GAAe,CACnBP,MAAO,GACPhI,KAAM,KACNrB,SAAS,EACTyB,MAAO,ICTMqI,8BAAgB,CAC7BrH,MJHa,WAAyC,IAA/B7C,EAA8B,uDAAtBgK,GAAcG,EAAQ,uCAC7CnL,EAAkBmL,EAAlBnL,KAAMC,EAAYkL,EAAZlL,QAEd,OAAQD,GACN,KAAK9B,EACH,MAAM,GAAN,oBAAW8C,GAAX,CAAkBf,IACpB,KAAK9B,EACH,OAAO6C,EAAMoK,QAAO,SAACvH,GAAD,OAAWA,EAAM/D,KAAOG,KAC9C,QACE,OAAOe,IILXC,KHSa,WAAyC,IAA/BD,EAA8B,uDAAtBgK,GAAcG,EAAQ,uCAC7CnL,EAAkBmL,EAAlBnL,KAAMC,EAAYkL,EAAZlL,QAEd,OAAQD,GACN,KAAK1B,EACH,OAAO,2BACF0C,GADL,IAEEG,iBAAiB,EACjBC,SAAS,EACT+E,KAAMlG,IAEV,KAAK7B,EACL,KAAKI,EAEH,OADAmC,aAAa0K,QAAQ,QAASpL,EAAQG,OAC/B,uCACFY,GACAf,GAFL,IAGEkB,iBAAiB,EACjBC,SAAS,IAGb,KAAK/C,EACL,KAAKE,EACL,KAAKE,EACL,KAAKC,EAEH,OADAiC,aAAa2K,WAAW,SACjB,2BACFtK,GADL,IAEEZ,MAAO,KACPe,iBAAiB,EACjBC,SAAS,IAEb,QACE,OAAOJ,IGzCX+E,QFQa,WAAyC,IAA/B/E,EAA8B,uDAAtBgK,GAAcG,EAAQ,uCAC7CnL,EAAkBmL,EAAlBnL,KAAMC,EAAYkL,EAAZlL,QAEd,OAAQD,GACN,KAAKrB,EACL,KAAKK,EACH,OAAO,2BACFgC,GADL,IAEE+E,QAAS9F,EACTmB,SAAS,IAEb,KAAKxC,EACH,OAAO,2BACFoC,GADL,IAEEuH,SAAUtI,EACVmB,SAAS,IAEb,KAAKtC,EACH,OAAO,2BACFkC,GADL,IAEE6B,MAAO5C,EACPmB,SAAS,EACT2E,QAAS,OAEb,KAAKhH,EACH,OAAO,2BACFiC,GADL,IAEE+E,QAAS,KACTiD,MAAO,GACP5H,SAAS,IAEb,KAAKvC,EACH,OAAO,2BACFmC,GADL,IAEEgI,MAAO/I,EACPmB,SAAS,IAGb,QACE,OAAOJ,IE9CXyB,KDQa,WAAyC,IAA/BzB,EAA8B,uDAAtBgK,GAAcG,EAAQ,uCAC7CnL,EAAkBmL,EAAlBnL,KAAMC,EAAYkL,EAAZlL,QAEd,OAAQD,GACN,KAAKf,EACH,OAAO,2BACF+B,GADL,IAEEyJ,MAAOxK,EACPmB,SAAS,IAEb,KAAKlC,EACH,OAAO,2BACF8B,GADL,IAEEyB,KAAMxC,EACNmB,SAAS,IAEb,KAAK9B,EACH,OAAO,2BACF0B,GADL,IAEEyJ,MAAM,CAAExK,GAAH,oBAAee,EAAMyJ,QAC1BrJ,SAAS,IAEb,KAAK/B,EACH,OAAO,2BACF2B,GADL,IAEEyJ,MAAOzJ,EAAMyJ,MAAMW,QAAO,SAAC3I,GAAD,OAAUA,EAAK+C,MAAQvF,KACjDmB,SAAS,IAEb,KAAKjC,EACH,OAAO,2BACF6B,GADL,IAEE6B,MAAO5C,EACPmB,SAAS,IAEb,KAAKhC,EACH,OAAO,2BACF4B,GADL,IAEEyJ,MAAOzJ,EAAMyJ,MAAM1G,KAAI,SAACtB,GAAD,OACrBA,EAAK+C,MAAQvF,EAAQH,GAArB,2BAA+B2C,GAA/B,IAAqCwH,MAAOhK,EAAQgK,QAAUxH,KAEhErB,SAAS,IAEb,KAAK7B,EACH,OAAO,2BACFyB,GADL,IAEEyB,KAAK,2BAAMzB,EAAMyB,MAAb,IAAmByH,SAAUjK,IACjCmB,SAAS,IAEb,KAAK5B,EACH,OAAO,2BACFwB,GADL,IAEEyB,KAAK,2BACAzB,EAAMyB,MADP,IAEFyH,SAAUlJ,EAAMyB,KAAKyH,SAASkB,QAC5B,SAACN,GAAD,OAAaA,EAAQtF,MAAQvF,OAGjCmB,SAAS,IAEb,QACE,OAAOJ,MEvEPuK,GAAa,CAACC,MAQLC,GANDC,uBACZC,GALmB,GAOnBC,+BAAoBC,mBAAe,WAAf,EAAmBN,MCcrC5K,aAAaP,OACfD,EAAaQ,aAAaP,OAG5B,IAiDe0L,GAjDH,WAKV,OAJA1F,qBAAU,WACRqF,GAAM5L,SAASY,OACd,IAGD,cAAC,IAAD,CAAUgL,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,eAAC,WAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAI/H,UAAWgI,IACjC,0BAAS1K,UAAU,YAAnB,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOwK,OAAK,EAACC,KAAK,YAAY/H,UAAWiI,IACzC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAAS/H,UAAWkI,IACtC,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,YAAY/H,UAAWmI,KACzC,cAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,eAAe/H,UAAWoI,KAC5C,cAAC,EAAD,CAAcN,OAAK,EAACC,KAAK,aAAa/H,UAAWqI,KACjD,cAAC,EAAD,CACEP,OAAK,EACLC,KAAK,kBACL/H,UAAWsI,KAEb,cAAC,EAAD,CACER,OAAK,EACLC,KAAK,gBACL/H,UAAWuI,KAEb,cAAC,EAAD,CACET,OAAK,EACLC,KAAK,kBACL/H,UAAWwI,KAEb,cAAC,EAAD,CACEV,OAAK,EACLC,KAAK,iBACL/H,UAAWyI,KAEb,cAAC,EAAD,CAAcX,OAAK,EAACC,KAAK,SAAS/H,UAAW0I,KAC7C,cAAC,EAAD,CAAcZ,OAAK,EAACC,KAAK,aAAa/H,UAAW2I,mBClE/DC,IAAS1I,OAAO,cAAC,GAAD,IAAS2I,SAASC,eAAe,W","file":"static/js/main.2e4e34a0.chunk.js","sourcesContent":["export const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const GET_PROFILE = \"GET_PROFILE\";\r\nexport const GET_PROFILES = \"GET_PROFILES\";\r\nexport const GET_REPOS = \"GET_REPOS\";\r\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\r\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\r\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\r\nexport const DELETE_ACCOUNT = \"DELETE_ACCOUNT\";\r\nexport const ACCOUNT_DELETED = \"ACCOUNT_DELETED\";\r\nexport const GET_POSTS = \"GET_POSTS\";\r\nexport const GET_POST = \"GET_POST\";\r\nexport const POST_ERROR = \"POST_ERROR\";\r\nexport const UPDATE_LIKES = \"UPDATE_LIKES\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const REMOVE_COMMENT = \"REMOVE_COMMENT\";\r\n","import { SET_ALERT, REMOVE_ALERT } from \"./types\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nexport const setAlert = (msg, alertType, timeout = 3500) => (dispatch) => {\r\n  const id = uuid();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"x-auth-token\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from \"./types\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n// Load user\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(\"/api/auth\");\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: AUTH_ERROR });\r\n  }\r\n};\r\n\r\n// Register user action\r\n\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/users\", body, config);\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Login user\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout / Clear Profile\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: LOGOUT });\r\n  dispatch({ type: CLEAR_PROFILE });\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logout } from \"../../actions/auth\";\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const authlinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/profiles\">\r\n          <i className=\"fas fa-user\"></i>\r\n          Cloud Specialists\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/posts\">\r\n          <i className=\"fas fa-user\"></i>\r\n          Posts\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/dashboard\">\r\n          <i className=\"fas fa-user\"></i>\r\n          <span className=\"hide-sm\">Dashboard</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"\" onClick={logout}>\r\n          <i className=\"fas fa-sign-out-alt\"></i>\r\n          <span className=\"hide-sm\">Logout</span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/profiles\">\r\n          <i className=\"fas fa-user\"></i>\r\n          Cloud Specialists\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/register\">Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/login\">Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className=\"navbar bg-dark\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          <i className=\"fas fa-cloud\"></i> C.S.C\r\n        </Link>\r\n      </h1>\r\n      {!loading && (\r\n        <Fragment>{isAuthenticated ? authlinks : guestLinks}</Fragment>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","export default __webpack_public_path__ + \"static/media/spinner.c1b8565f.gif\";","import React, { Fragment } from \"react\";\r\nimport spinner from \"./spinner.gif\";\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      alt=\"\"\r\n      style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\r\n    />\r\n  </Fragment>\r\n);\r\n","import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { cinnect, connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"../layouts/Spinner\";\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <section className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"landing-inner\">\r\n          <h1 className=\"x-large\">Cloud Specialists Connector</h1>\r\n          <p className=\"lead\">\r\n            Create a cloud specialist profile/portfolio, share posts and get\r\n            help from other specialists\r\n          </p>\r\n          <div className=\"buttons\">\r\n            <Link to=\"/register\" className=\"btn btn-primary\">\r\n              Sign Up\r\n            </Link>\r\n            <Link to=\"/login\" className=\"btn btn-light\">\r\n              Login\r\n            </Link>\r\n            <div id=\"footer\">\r\n              <p>Created by George Falkovich 2021</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { register } from \"../../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\nimport { REMOVE_ALERT } from \"../../actions/types\";\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert(\"Passwords do not match\", \"danger\");\r\n    } else {\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n\r\n  // Redirect if user is authenticated\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div id=\"register\">\r\n        <h1 className=\"large text-primary\">Sign Up</h1>\r\n        <p className=\"lead\">\r\n          <i className=\"fas fa-user\"></i> Create Your Account\r\n        </p>\r\n        <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n              onChange={(e) => onChange(e)}\r\n              name=\"name\"\r\n              // required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email Address\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => onChange(e)}\r\n              // required\r\n            />\r\n            <small className=\"form-text\">\r\n              This site uses Gravatar so if you want a profile image, use a\r\n              Gravatar email\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              //      minLength=\"6\"\r\n              value={password}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              name=\"password2\"\r\n              //   minLength=\"6\"\r\n              value={password2}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n        </form>\r\n        <p className=\"my-1\">\r\n          Already have an account? <Link to=\"/login\">Sign In</Link>\r\n        </p>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formData;\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  // Redirect if logged in\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Login</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Login into your account\r\n      </p>\r\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            minLength=\"6\"\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to=\"/login\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED,\r\n} from \"./types\";\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n\r\n  try {\r\n    const res = await axios.get(\"/api/profile\");\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get Github repos\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get profile by ID\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/profile/me\");\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Create or update user profile\r\n\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const res = await axios.post(\"/api/profile\", formData, config);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\r\n\r\n    if (!edit) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Experience Added\", \"success\"));\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.put(\"/api/profile/education\", formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Education Added\", \"success\"));\r\n\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete education\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Education Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete account & profile\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\r\n    try {\r\n      await axios.delete(\"/api/profile\");\r\n\r\n      dispatch({ type: CLEAR_PROFILE });\r\n      dispatch({ type: ACCOUNT_DELETED });\r\n\r\n      dispatch(setAlert(\"Your account has been permanantly deleted\"));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const DashboardActions = () => {\r\n  return (\r\n    <div className=\"dash-buttons\">\r\n      <Link to=\"/edit-profile\" className=\"btn btn-light\">\r\n        <i className=\"fas fa-user-circle text-primary\"></i> Edit Profile\r\n      </Link>\r\n      <Link to=\"/add-experience\" className=\"btn btn-light\">\r\n        <i className=\"fab fa-black-tie text-primary\"></i> Add Experience\r\n      </Link>\r\n      <Link to=\"/add-education\" className=\"btn btn-light\">\r\n        <i className=\"fas fa-graduation-cap text-primary\"></i> Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteExperience } from \"../../actions/profile\";\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n  const experiences = experience.map((exp) => (\r\n    <tr key={exp._id}>\r\n      <td>{exp.company}</td>\r\n      <td className=\"hide-sm\">{exp.title}</td>\r\n      <td>\r\n        <Moment format=\"YYYY/MM/DD\">{moment.utc(exp.from)}</Moment> -{\" \"}\r\n        {exp.to === null ? (\r\n          \" Now\"\r\n        ) : (\r\n          <Moment format=\"YYYY/MM/DD\">{moment.utc(exp.to)}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteExperience(exp._id)}\r\n          className=\"btn btn-danger\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"my-2\">Experience Credentials</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th className=\"hide-sm\">Title</th>\r\n            <th className=\"hide-sm\">Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{experiences}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteEducation } from \"../../actions/profile\";\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n  const educations = education.map((edu) => (\r\n    <tr key={edu._id}>\r\n      <td>{edu.school}</td>\r\n      <td className=\"hide-sm\">{edu.degree}</td>\r\n      <td>\r\n        <Moment format=\"YYYY/MM/DD\">{moment.utc(edu.from)}</Moment> -{\" \"}\r\n        {edu.to === null ? (\r\n          \" Now\"\r\n        ) : (\r\n          <Moment format=\"YYYY/MM/DD\">{moment.utc(edu.to)}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteEducation(edu._id)}\r\n          className=\"btn btn-danger\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"my-2\">Education Credentials</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>School</th>\r\n            <th className=\"hide-sm\">Degree</th>\r\n            <th className=\"hide-sm\">Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody>{educations}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layouts/Spinner\";\r\nimport PrivateRoute from \"../routing/PrivateRoute\";\r\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profile\";\r\nimport { DashboardActions } from \"./DashboardActions\";\r\nimport Experience from \"./Experience\";\r\nimport Education from \"./Education\";\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return loading && profile == null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Dashboard</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n\r\n          <div className=\"my-2\">\r\n            <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n              <i className=\"fas fa-user-minus\"></i>\r\n              Delete My Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not setup a profile yet, please add some info</p>\r\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProfile } from \"../../actions/profile\";\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    status: \"\",\r\n    skills: \"\",\r\n    githubusername: \"\",\r\n    bio: \"\",\r\n    twitter: \"\",\r\n    facebook: \"\",\r\n    linkedin: \"\",\r\n    youtube: \"\",\r\n    instagram: \"\",\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history);\r\n  };\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Cloud Developer</option>\r\n            <option value=\"Junior Developer\">\r\n              Cloud Architect and Engineer\r\n            </option>\r\n            <option value=\"Senior Developer\">Sales and Marketing</option>\r\n            <option value=\"Student or Learning\">\r\n              Customer success manager\r\n            </option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            City and state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. GCP, AWS, Cloud Computing,\r\n            DevOps, Java, NodeJS, Sales, Managment, Customer success...)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    website: \"\",\r\n    location: \"\",\r\n    status: \"\",\r\n    skills: \"\",\r\n    githubusername: \"\",\r\n    bio: \"\",\r\n    twitter: \"\",\r\n    facebook: \"\",\r\n    linkedin: \"\",\r\n    youtube: \"\",\r\n    instagram: \"\",\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? \"\" : profile.company,\r\n      website: loading || !profile.website ? \"\" : profile.website,\r\n      location: loading || !profile.location ? \"\" : profile.location,\r\n      status: loading || !profile.status ? \"\" : profile.status,\r\n      skills: loading || !profile.skills ? \"\" : profile.skills.join(\",\"),\r\n      githubusername:\r\n        loading || !profile.githubusername ? \"\" : profile.githubusername,\r\n      bio: loading || !profile.bio ? \"\" : profile.bio,\r\n      twitter: loading || !profile.social ? \"\" : profile.social.twitter,\r\n      facebook: loading || !profile.social ? \"\" : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? \"\" : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? \"\" : profile.social.youtube,\r\n      instagram: loading || !profile.social ? \"\" : profile.social.instagram,\r\n    });\r\n  }, [loading, getCurrentProfile]);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\">\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Website\"\r\n            name=\"website\"\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            City and state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Skills\"\r\n            name=\"skills\"\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className=\"form-text\">\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            placeholder=\"A short bio of yourself\"\r\n            name=\"bio\"\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-twitter fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Twitter URL\"\r\n                name=\"twitter\"\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-facebook fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Facebook URL\"\r\n                name=\"facebook\"\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-youtube fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"YouTube URL\"\r\n                name=\"youtube\"\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-linkedin fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Linkedin URL\"\r\n                name=\"linkedin\"\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n              <i className=\"fab fa-instagram fa-2x\"></i>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Instagram URL\"\r\n                name=\"instagram\"\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addExperience } from \"../../actions/profile\";\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    title: \"\",\r\n    location: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    current: false,\r\n    description: \"\",\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Add An Experience</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\" /> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addExperience(formData, history);\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Job Title\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"from\"\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"current\"\r\n              checked={current}\r\n              value={current}\r\n              onChange={() => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{\" \"}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"to\"\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? \"disabled\" : \"\"}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Job Description\"\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addEducation } from \"../../actions/profile\";\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: \"\",\r\n    degree: \"\",\r\n    fieldofstudy: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    current: false,\r\n    description: \"\",\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Add Your Education</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\" /> Add any school or bootcamp that you\r\n        have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addEducation(formData, history);\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* School or Bootcamp\"\r\n            name=\"school\"\r\n            value={school}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Degree or Certificate\"\r\n            name=\"degree\"\r\n            value={degree}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Field of Study\"\r\n            name=\"fieldofstudy\"\r\n            value={fieldofstudy}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"from\"\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"current\"\r\n              checked={current}\r\n              value={current}\r\n              onChange={() => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{\" \"}\r\n            Current School\r\n          </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"to\"\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? \"disabled\" : \"\"}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Program Description\"\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    user: { _id, name, avatar },\r\n    status,\r\n    company,\r\n    location,\r\n    skills,\r\n  },\r\n}) => {\r\n  return (\r\n    <div className=\"profile bg-light\">\r\n      <img src={avatar} alt=\"\" className=\"round-img\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>\r\n          {status} {company && <span> at {company}</span>}\r\n        </p>\r\n        <p className=\"my-1\">{location && <span>{location}</span>}</p>\r\n        <Link to={`/profile/${_id}`} className=\"btn btn-primary\">\r\n          View Profile\r\n        </Link>\r\n      </div>\r\n      <ul>\r\n        {skills.slice(0, 4).map((skill, index) => (\r\n          <li key={index} className=\"text-primary\">\r\n            <i className=\"fas fa-check\" /> {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileItem;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layouts/Spinner\";\r\nimport ProfileItem from \"./ProfileItem\";\r\nimport { getProfiles } from \"../../actions/profile\";\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className=\"large text-primary\">Developers</h1>\r\n          <p className=\"lead\">\r\n            <i className=\"fab fa-connectdevelop\" /> Browse and connect with\r\n            other cloud specialists\r\n          </p>\r\n          <div className=\"profiles\">\r\n            {profiles.length > 0 ? (\r\n              profiles.map((profile) => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4>No profiles found...</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar },\r\n  },\r\n}) => {\r\n  return (\r\n    <div className=\"profile-top bg-primary p-2\">\r\n      <img className=\"round-img my-1\" src={avatar} alt=\"\" />\r\n      <h1 className=\"large\">{name}</h1>\r\n      <p className=\"lead\">\r\n        {status} {company && <span> at {company}</span>}\r\n      </p>\r\n      <p>{location && <span>{location}</span>}</p>\r\n      <div className=\"icons my-1\">\r\n        {website && (\r\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fas fa-globe fa-2x\" />\r\n          </a>\r\n        )}\r\n        {social && social.twitter && (\r\n          <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-twitter fa-2x\" />\r\n          </a>\r\n        )}\r\n        {social && social.facebook && (\r\n          <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-facebook fa-2x\" />\r\n          </a>\r\n        )}\r\n        {social && social.linkedin && (\r\n          <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-linkedin fa-2x\" />\r\n          </a>\r\n        )}\r\n        {social && social.youtube && (\r\n          <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-youtube fa-2x\" />\r\n          </a>\r\n        )}\r\n        {social && social.instagram && (\r\n          <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-instagram fa-2x\" />\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileTop;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProfileAbout = ({\r\n  profile: {\r\n    bio,\r\n    skills,\r\n    user: { name },\r\n  },\r\n}) => (\r\n  <div className=\"profile-about bg-light p-2\">\r\n    {bio && (\r\n      <Fragment>\r\n        <h2 className=\"text-primary\">{name.trim().split(\" \")[0]}'s Bio</h2>\r\n        <p>{bio}</p>\r\n        <div className=\"line\" />\r\n      </Fragment>\r\n    )}\r\n    <h2 className=\"text-primary\">Skill Set</h2>\r\n    <div className=\"skills\">\r\n      {skills.map((skill, index) => (\r\n        <div key={index} className=\"p-1\">\r\n          <i className=\"fas fa-check\" /> {skill}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\n\r\nconst ProfileExperience = ({\r\n  experience: { company, title, location, current, to, from, description },\r\n}) => (\r\n  <div>\r\n    <h3 className=\"text-dark\">{company}</h3>\r\n    <p>\r\n      <Moment format=\"YYYY/MM/DD\">{moment.utc(from)}</Moment> -{\" \"}\r\n      {!to ? \" Now\" : <Moment format=\"YYYY/MM/DD\">{moment.utc(to)}</Moment>}\r\n    </p>\r\n    <p>\r\n      <strong>Position: </strong> {title}\r\n    </p>\r\n    <p>\r\n      <strong>Location: </strong> {location}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileExperience.propTypes = {\r\n  experience: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\n\r\nconst ProfileEducation = ({\r\n  education: { school, degree, fieldofstudy, current, to, from, description },\r\n}) => (\r\n  <div>\r\n    <h3 className=\"text-dark\">{school}</h3>\r\n    <p>\r\n      <Moment format=\"YYYY/MM/DD\">{moment.utc(from)}</Moment> -{\" \"}\r\n      {!to ? \" Now\" : <Moment format=\"YYYY/MM/DD\">{moment.utc(to)}</Moment>}\r\n    </p>\r\n    <p>\r\n      <strong>Degree: </strong> {degree}\r\n    </p>\r\n    <p>\r\n      <strong>Field Of Study: </strong> {fieldofstudy}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileEducation.propTypes = {\r\n  education: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layouts/Spinner\";\r\nimport { getGithubRepos } from \"../../actions/profile\";\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos]);\r\n\r\n  return (\r\n    <div className=\"profile-github\">\r\n      <h2 className=\"text-primary my-1\">Github Repos</h2>\r\n      {repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        repos.map((repo) => (\r\n          <div key={repo.id} className=\"repo bg-white p-1 my-1\">\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n              <p>{repo.description}</p>\r\n            </div>\r\n            <div>\r\n              <ul>\r\n                <li className=\"badge badge-primary\">\r\n                  Stars: {repo.stargazers_count}\r\n                </li>\r\n                <li className=\"badge badge-dark\">\r\n                  Watchers: {repo.watchers_count}\r\n                </li>\r\n                <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layouts/Spinner\";\r\nimport ProfileTop from \"./ProfileTop\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileExperience from \"./ProfileExperience\";\r\nimport ProfileEducation from \"./ProfileEducation\";\r\nimport ProfileGithub from \"./ProfileGithub\";\r\nimport { getProfileById } from \"../../actions/profile\";\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match,\r\n}) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById, match.params.id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to=\"/profiles\" className=\"btn btn-light\">\r\n            Back To Profiles\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to=\"/edit-profile\" className=\"btn btn-dark\">\r\n                Edit Profile\r\n              </Link>\r\n            )}\r\n          <div className=\"profile-grid my-1\">\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n            <div className=\"profile-exp bg-white p-2\">\r\n              <h2 className=\"text-primary\">Experience</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map((experience) => (\r\n                    <ProfileExperience\r\n                      key={experience._id}\r\n                      experience={experience}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No experience credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"profile-edu bg-white p-2\">\r\n              <h2 className=\"text-primary\">Education</h2>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map((education) => (\r\n                    <ProfileEducation\r\n                      key={education._id}\r\n                      education={education}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No education credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            {profile.githubusername && (\r\n              <ProfileGithub username={profile.githubusername} />\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions,\r\n}) => (\r\n  <div className=\"post bg-white p-1 my-1\">\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className=\"round-img\" src={avatar} alt=\"\" />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className=\"my-1\">{text}</p>\r\n      <p className=\"post-date\">\r\n        Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n      </p>\r\n\r\n      {showActions && (\r\n        <Fragment>\r\n          <button\r\n            onClick={() => addLike(_id)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fas fa-thumbs-up\" />{\" \"}\r\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n          </button>\r\n          <button\r\n            onClick={() => removeLike(_id)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fas fa-thumbs-down\" />\r\n          </button>\r\n          <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n            Discussion{\" \"}\r\n            {comments.length > 0 && (\r\n              <span className=\"comment-count\">{comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={() => deletePost(_id)}\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n            >\r\n              <i className=\"fas fa-times\" />\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n  showActions: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from \"./types\";\r\n\r\n// Get posts\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/posts\");\r\n\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add like\r\nexport const addLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Remove like\r\nexport const removeLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete post\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id,\r\n    });\r\n\r\n    dispatch(setAlert(\"Post Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add post\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/posts\", formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Post Created\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get post\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add comment\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/posts/comment/${postId}`,\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Comment Added\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete comment\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId,\r\n    });\r\n\r\n    dispatch(setAlert(\"Comment Removed\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPost } from \"../../actions/post\";\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"post-form\">\r\n      <div className=\"bg-primary p\">\r\n        <h3>Say Something...</h3>\r\n      </div>\r\n      <form\r\n        className=\"form my-1\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addPost({ text });\r\n          setText(\"\");\r\n        }}\r\n      >\r\n        <textarea\r\n          name=\"text\"\r\n          cols=\"30\"\r\n          rows=\"5\"\r\n          placeholder=\"Create a post\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        />\r\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layouts/Spinner\";\r\nimport PostItem from \"./PostItem\";\r\nimport PostForm from \"./PostForm\";\r\nimport { getPosts } from \"../../actions/post\";\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Posts</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Welcome to the community\r\n      </p>\r\n      <PostForm />\r\n      <div className=\"posts\">\r\n        {posts.map((post) => (\r\n          <PostItem key={post._id} post={post} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addComment } from \"../../actions/post\";\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"post-form\">\r\n      <div className=\"bg-primary p\">\r\n        <h3>Leave a Comment</h3>\r\n      </div>\r\n      <form\r\n        className=\"form my-1\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addComment(postId, { text });\r\n          setText(\"\");\r\n        }}\r\n      >\r\n        <textarea\r\n          name=\"text\"\r\n          cols=\"30\"\r\n          rows=\"5\"\r\n          placeholder=\"Comment the post\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        />\r\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport { deleteComment } from \"../../actions/post\";\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment,\r\n}) => (\r\n  <div className=\"post bg-white p-1 my-1\">\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className=\"round-img\" src={avatar} alt=\"\" />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className=\"my-1\">{text}</p>\r\n      <p className=\"post-date\">\r\n        Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n      </p>\r\n      {!auth.loading && user === auth.user._id && (\r\n        <button\r\n          onClick={() => deleteComment(postId, _id)}\r\n          type=\"button\"\r\n          className=\"btn btn-danger\"\r\n        >\r\n          <i className=\"fas fa-times\" />\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../layouts/Spinner\";\r\nimport PostItem from \"../posts/PostItem\";\r\nimport CommentForm from \"../post/CommentForm\";\r\nimport CommentItem from \"../post/CommentItem\";\r\nimport { getPost } from \"../../actions/post\";\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost, match.params.id]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to=\"/posts\" className=\"btn\">\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className=\"comments\">\r\n        {post.comments.map((comment) => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false,\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n        profile: null,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false,\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false,\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== payload),\r\n        loading: false,\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false,\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        loading: false,\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment._id !== payload\r\n          ),\r\n        },\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport auth from \"./auth\";\r\nimport profile from \"./profile\";\r\nimport post from \"./post\";\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n  profile,\r\n  post,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/layouts/Navbar\";\nimport Landing from \"./components/layouts/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Alert from \"./components/layouts/Alert\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport CreateProfile from \"./components/prodfile-forms/CreateProfile\";\nimport EditProfile from \"./components/prodfile-forms/EditProfile\";\nimport AddExperience from \"./components/prodfile-forms/AddExperience\";\nimport AddEducation from \"./components/prodfile-forms/AddEducation\";\nimport Profiles from \"./components/profiles/Profiles\";\nimport Profile from \"./components/profile/Profile\";\nimport Posts from \"./components/posts/Posts\";\nimport Post from \"./components/post/Post\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\nimport { loadUser } from \"./actions/auth\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport ProfileForm from \"./components/prodfile-forms/CreateProfile\";\nimport \"./App.css\";\n// Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { addEducation } from \"./actions/profile\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <section className=\"container\">\n              <Alert />\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/profiles\" component={Profiles} />\n              <Route exact path=\"/profile/:id\" component={Profile} />\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute\n                exact\n                path=\"/create-profile\"\n                component={CreateProfile}\n              />\n              <PrivateRoute\n                exact\n                path=\"/edit-profile\"\n                component={EditProfile}\n              />\n              <PrivateRoute\n                exact\n                path=\"/add-experience\"\n                component={AddExperience}\n              />\n              <PrivateRoute\n                exact\n                path=\"/add-education\"\n                component={AddEducation}\n              />\n              <PrivateRoute exact path=\"/posts\" component={Posts} />\n              <PrivateRoute exact path=\"/posts/:id\" component={Post} />\n            </section>\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}